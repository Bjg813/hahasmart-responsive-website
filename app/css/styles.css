.box{background-image:url(../images/hahasmart-hero-image.jpg);overflow:hidden;background-size:cover;background-repeat:no-repeat;position:relative;padding:0 0 49%}.box h1{color:#efefef;text-align:left;margin:10% 0 0 10%;padding:3%;font-weight:bolder;font-size:1.8rem;text-shadow:2px 2px #c27b3b}.box h1 .funny{color:#82c23b}.box h2{color:#efefef;text-align:center;font-size:1.2rem;margin:0 0 20%;padding:0 5%}.hero-button{position:absolute;top:48%;left:30%;color:#c27b3b;font-weight:900}.hero-button,.hero-button:focus,.hero-button:hover{background-color:transparent;border:1px solid #c27b3b}.hero-button:focus,.hero-button:hover{color:#82c23b}@media only screen and (min-width:576px){.hero-button{left:37%}}@media only screen and (min-width:768px){.box h1{font-size:3.5rem;padding:7% 0 5%}.box h2{font-size:2.2rem;text-shadow:2px 2px #000}.hero-button{top:56%;left:37%;font-size:1.5rem}}@media only screen and (min-width:1200px){.hero-button{left:43%;font-size:2.5rem}.box h1{font-size:5.5rem}}.navbar-light .navbar-brand{width:20%}@media (min-width:992px){.navbar-light .navbar-brand{width:10%}}.text-box .text-box-logo{margin:0 0 8%;padding:0 30%}.text-box{padding:5% 0 15% 3%;background-color:#f9f9f9}.text-box .screenshot-container{width:100%;height:200px}@media only screen and (min-width:1900px){.text-box .screenshot-container{position:absolute;height:600px;width:76%;top:2288px;right:158px}}.flex-horizontal-wrap{display:flex;justify-content:center;flex-wrap:wrap}.grid-container{font-size:40px;min-height:800px;width:100%;background:#d3d3d3;display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));grid-template-rows:repeat(6,1fr);grid-gap:10px}@media only screen and (min-width:411px){.grid-container{grid-template-rows:repeat(3,1fr)}}@media only screen and (min-width:576px){.grid-container{grid-template-rows:repeat(3,1fr);grid-template-columns:repeat(auto-fill,minmax(300px,1fr))}}@media only screen and (min-width:768px){.grid-container{grid-template-rows:repeat(3,1fr)}}@media only screen and (min-width:992px){.grid-container{grid-template-rows:repeat(3,1fr);grid-template-columns:repeat(auto-fill,minmax(400px,1fr))}}@media only screen and (min-width:1200px){.grid-container{grid-template-rows:repeat(2,1fr)}}@media only screen and (min-width:1900px){.grid-container{grid-template-columns:repeat(auto-fill,minmax(500px,1fr))}}.item1{background-color:#c27b3b}.item2{background-color:#3b82c2}.item3{background-color:#7b3bc2}.item4{background-color:#c27b3b}.item5{background-color:#3b82c2}.item6{background-color:#7b3bc2}.milestones{position:relative;padding:510px 0 274px}.milestones .background{position:absolute;height:100%;left:calc(50% - 390px);right:0;top:0;background-color:#82c23b;z-index:-1}.milestones .content-row{display:flex;flex-direction:column;justify-content:space-between;position:relative}.milestones .content-container{height:100%;margin:0 auto;box-sizing:border-box;max-width:calc(100% - 44px)}.milestones .image-container{width:41.66%}.milestones .image{width:auto;height:auto;max-width:100%;position:absolute;top:-352px;left:-136px;border-style:none}.milestones .context-container{width:100%;color:#efefef;text-align:right;padding:0 0 0 35%}@media only screen and (min-width:411px){.milestones .image{top:-350px;left:-122px}}@media only screen and (min-width:768px){.milestones .image{padding:28%;top:-530px;left:-286px}}@media only screen and (min-width:1200px){.milestones .image{top:-237px;left:-464px}.milestones .content-container{padding:0 0 0 58%}}@media only screen and (min-width:1900px){.milestones{padding:560px 0 600px}.milestones .content-row{flex-direction:row}.milestones .context-container{padding:0 0 0 7%;margin:0 232px 0 0}.milestones .image{left:-831px;top:-478px}}body,html{height:100%;margin:0;background-color:#efefef;text-align:center}h1,h2,h3,h4,h5,h6{font-family:Montserrat,sans-serif}a,p{font-family:Lato,sans-serif}img{width:100%;height:auto}ul{list-style:none}a:focus,a:hover{text-decoration:none}a img{border:none}@media only screen and (min-width:1200px){body{font-size:22px}h1,h2{font-size:48px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9oZXJvLXNlY3Rpb24uc2NzcyIsIl92YXJpYWJsZXMuc2NzcyIsIl9uYXYtYmFyLnNjc3MiLCJfdGV4dC1ib3guc2NzcyIsIl9wb3NpdGlvbmluZy1mbGV4Ym94LnNjc3MiLCJfYm94X3N0ZXAuc2NzcyIsIl9taWxlc3RvbmUtc2VjdGlvbi5zY3NzIiwic3R5bGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsS0FDQyx5REFBMEQsQUFDMUQsZ0JBQWdCLEFBQ2hCLHNCQUFzQixBQUNuQiw0QkFBNEIsQUFDNUIsa0JBQWtCLEFBQ2xCLGVBQWtCLENBQ3JCLEFBRUQsUUFFUSxjQ1JlLEFEU2YsZ0JBQWdCLEFBQ2hCLG1CQUFtQixBQUNuQixXQUFXLEFBQ1gsbUJBQW1CLEFBQ25CLGlCQ0lXLEFESFgsMkJDUG9CLENEUXZCLEFBR0wsZUFHWSxhQ3BCYSxDRHFCaEIsQUFJVCxRQUVRLGNDNUJlLEFENkJmLGtCQUFpQixBQUNqQixpQkNaVyxBRGFYLGVBQWlCLEFBQ2pCLFlBQWEsQ0FDaEIsQUFHTCxhQUNJLGtCQUFrQixBQUNsQixRQUFRLEFBQ1IsU0FBUyxBQUdULGNDbkN3QixBRG9DeEIsZUFBZ0IsQ0FDbkIsQUFFRCxtREFOSSw2QkFBNkIsQUFDN0Isd0JDbEN3QixDRHVDNUIsQUFLSyxzQ0FERyxhQ2pEaUIsQ0RrRHBCLEFBRUwseUNBQ0ksYUFDSSxRQUFTLENBQ1osQ0FBQSxBQUdMLHlDQUNBLFFBRVEsaUJDeENXLEFEeUNYLGVBQWtCLENBQ3JCLEFBR0wsUUFFUSxpQkM5Q1csQUQrQ1gsd0JDcEVZLENEcUVmLEFBR0wsYUFDSSxRQUFRLEFBQ1IsU0FBUyxBQUNULGdCQUFpQixDQUNwQixDQUFBLEFBR0QsMENBQ0ksYUFDSSxTQUFTLEFBQ1QsZ0JBQWlCLENBQ3BCLEFBRUQsUUFFUSxnQkFBaUIsQ0FDcEIsQ0FBQSxBRS9GVCw0QkFFUSxTQUFVLENBQ2IsQUFHTCx5QkFDSSw0QkFHUSxTQUFVLENBQ2IsQ0FBQSxBQ1RULHlCQUVRLGNBQWdCLEFBQ2hCLGFBQWMsQ0FDakIsQUFHTCxVQUNJLG9CQUFvQixBQUNwQix3QkZGc0IsQ0VHekIsQUFFRCxnQ0FFUSxXQUFXLEFBQ1gsWUFBYSxDQUNoQixBQUdMLDBDQUNJLGdDQUVRLGtCQUFrQixBQUNsQixhQUFhLEFBQ2IsVUFBVSxBQUNWLFdBQVcsQUFDWCxXQUFZLENBQ2YsQ0FBQSxBQzNCVCxzQkFDSSxhQUFhLEFBQ2IsdUJBQXVCLEFBQ3ZCLGNBQWUsQ0FDbEIsQUNKRCxnQkFDSSxlQUFlLEFBQ2YsaUJBQWlCLEFBQ2pCLFdBQVcsQUFDWCxtQkFBcUIsQUFDckIsYUFBYSxBQUNiLDBEQUE0RCxBQUM1RCxpQ0FBa0MsQUFDbEMsYUFBYyxDQUNqQixBQUVELHlDQUNJLGdCQUNJLGdDQUFrQyxDQUNyQyxDQUFBLEFBR0wseUNBQ0ksZ0JBQ0ksaUNBQWtDLEFBQ2xDLHlEQUE0RCxDQUMvRCxDQUFBLEFBR0wseUNBQ0ksZ0JBQ0ksZ0NBQWtDLENBQ3JDLENBQUEsQUFHTCx5Q0FDSSxnQkFDSSxpQ0FBa0MsQUFDbEMseURBQTRELENBQy9ELENBQUEsQUFHTCwwQ0FDSSxnQkFDSSxnQ0FBa0MsQ0FDckMsQ0FBQSxBQUdMLDBDQUNJLGdCQUNJLHlEQUEwRCxDQUM3RCxDQUFBLEFBR0wsT0FDSSx3Qkp4Q3dCLENJeUMzQixBQUVELE9BQ0ksd0JKM0N3QixDSTRDM0IsQUFFRCxPQUNJLHdCSjlDMEIsQ0krQzdCLEFBRUQsT0FDSSx3QkpwRHdCLENJcUQzQixBQUVELE9BQ0ksd0JKdkR3QixDSXdEM0IsQUFFRCxPQUNJLHdCSjFEMEIsQ0kyRDdCLEFDdkVELFlBQ0ksa0JBQWtCLEFBQ2xCLHFCQUFzQixDQUN6QixBQUVELHdCQUVRLGtCQUFrQixBQUNsQixZQUFZLEFBQ1osdUJBQW9ELEFBQ3BELFFBQVEsQUFDUixNQUFNLEFBQ04seUJMUmlCLEFLU2pCLFVBQVcsQ0FDZCxBQUdMLHlCQUVRLGFBQWEsQUFDYixzQkFBc0IsQUFDdEIsOEJBQThCLEFBQzlCLGlCQUFrQixDQUNyQixBQUdMLCtCQUVRLFlBQVksQUFDWixjQUFjLEFBQ2Qsc0JBQXNCLEFBQ3RCLDJCQUE0QixDQUMvQixBQUdMLDZCQUVRLFlBQWEsQ0FDaEIsQUFHTCxtQkFFUSxXQUFXLEFBQ1gsWUFBWSxBQUNaLGVBQWUsQUFDZixrQkFBa0IsQUFDbEIsV0FBVyxBQUNYLFlBQVksQUFDWixpQkFBa0IsQ0FDckIsQUFHTCwrQkFFUSxXQUFXLEFBQ1gsY0xyRGUsQUtzRGYsaUJBQWlCLEFBQ2pCLGlCQUFtQixDQUN0QixBQUdMLHlDQUNJLG1CQUVRLFdBQVcsQUFDWCxXQUFZLENBQ2YsQ0FBQSxBQUlULHlDQUNJLG1CQUVRLFlBQVksQUFDWixXQUFXLEFBQ1gsV0FBWSxDQUNmLENBQUEsQUFJVCwwQ0FDSSxtQkFFUSxXQUFXLEFBQ1gsV0FBWSxDQUNmLEFBR0wsK0JBRVEsaUJBQWtCLENBQ3JCLENBQUEsQUFJVCwwQ0FFSSxZQUNJLHFCQUFzQixDQUN6QixBQUVELHlCQUVRLGtCQUFtQixDQUN0QixBQUdMLCtCQUVRLGlCQUFpQixBQUNqQixrQkFBbUIsQ0FDdEIsQUFHTCxtQkFFUSxZQUFZLEFBQ1osVUFBVyxDQUNkLENBQUEsQUNoSFQsVUFFRSxZQUFZLEFBQ1osU0FBUyxBQUNULHlCTlJxQixBTVNyQixpQkFBa0IsQ0FDbkIsQUFFRCxrQkFDRSxpQ05BNEMsQ01DN0MsQUFFRCxJQUNFLDJCTkh3QyxDTUl6QyxBQUVELElBQ0UsV0FBVyxBQUNYLFdBQVksQ0FDYixBQUVELEdBQ0UsZUFBZ0IsQ0FDakIsQUFFRCxnQkFFRSxvQkFBcUIsQ0FDdEIsQUFFRCxNQUVJLFdBQVksQ0FDYixBQUdILDBDQUNFLEtBQ0UsY0FBZSxDQUNoQixBQU1ELE1BQ0UsY0FBZSxDQUNoQixDQUFBIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdfdmFyaWFibGVzJztcclxuXHJcbi5ib3gge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6dXJsKCcuLi9pbWFnZXMvaGFoYXNtYXJ0LWhlcm8taW1hZ2UuanBnJyk7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmc6IDAgMCA0OSUgMDtcclxufVxyXG5cclxuLmJveCB7XHJcbiAgICBoMSB7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgbWFyZ2luOiAxMCUgMCAwIDEwJTtcclxuICAgICAgICBwYWRkaW5nOiAzJTtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGgxLWZvbnQteHM7XHJcbiAgICAgICAgdGV4dC1zaGFkb3c6IDJweCAycHggJHRldHJhZGljLWNvbG9yLW9uZTtcclxuICAgIH1cclxufVxyXG5cclxuLmJveCB7XHJcbiAgICBoMSB7XHJcbiAgICAgICAgLmZ1bm55IHtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uYm94IHtcclxuICAgIGgyIHtcclxuICAgICAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiAkaDItZm9udC14cztcclxuICAgICAgICBtYXJnaW46IDAgMCAyMCUgMDtcclxuICAgICAgICBwYWRkaW5nOiAwIDUlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaGVyby1idXR0b24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA0OCU7XHJcbiAgICBsZWZ0OiAzMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICR0ZXRyYWRpYy1jb2xvci1vbmU7XHJcbiAgICBjb2xvcjogJHRldHJhZGljLWNvbG9yLW9uZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuXHJcbi5oZXJvLWJ1dHRvbjpob3ZlcixcclxuICAgIC5oZXJvLWJ1dHRvbjpmb2N1cyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHRldHJhZGljLWNvbG9yLW9uZTtcclxuICAgICAgICBjb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIH0gIFxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbGFuZHNjYXBlLXBob25lcykgIHtcclxuICAgIC5oZXJvLWJ1dHRvbiB7XHJcbiAgICAgICAgbGVmdDogMzclO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXRzKSAge1xyXG4uYm94IHtcclxuICAgIGgxIHtcclxuICAgICAgICBmb250LXNpemU6ICRoMS1mb250LXhsO1xyXG4gICAgICAgIHBhZGRpbmc6IDclIDAgNSUgMDtcclxuICAgIH1cclxufVxyXG5cclxuLmJveCB7XHJcbiAgICBoMiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAkaDItZm9udC14bDtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAkZGFyay1jb2xvcjtcclxuICAgIH1cclxufVxyXG5cclxuLmhlcm8tYnV0dG9uIHtcclxuICAgIHRvcDogNTYlO1xyXG4gICAgbGVmdDogMzclO1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbn1cclxufSBcclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGxhcmdlLWRlc2t0b3BzKSB7XHJcbiAgICAuaGVyby1idXR0b24ge1xyXG4gICAgICAgIGxlZnQ6IDQzJTtcclxuICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAuYm94IHtcclxuICAgICAgICBoMSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNS41cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vLy8vLy8vLy8gVmFyaWFibGVzIC8vLy8vLy8vL1xyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbi8vIENvbG9yc1xyXG4kcHJpbWFyeS1jb2xvcjogI2VmZWZlZjtcclxuJHNlY29uZGFyeS1jb2xvcjogIzgyYzIzYjsgXHJcbiRkYXJrLWNvbG9yOiAjMDAwMDAwO1xyXG4kaG92ZXItYmFja2dyb3VuZC1jb2xvcjogIzk3Y2E1NTtcclxuJHByaW1hcnktYmctY29sb3I6ICNmOWY5Zjk7XHJcblxyXG4vLyBUZXRyYWRpYyBjb2xvcnNcclxuJHRldHJhZGljLWNvbG9yLW9uZTogI2MyN2IzYjtcclxuJHRldHJhZGljLWNvbG9yLXR3bzogIzNiODJjMjtcclxuJHRldHJhZGljLWNvbG9yLXRocmVlOiAjN2IzYmMyO1xyXG5cclxuXHJcbi8vIEZvbnRzXHJcbiRwcmltYXJ5LWZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcbiRzZWNvbmRhcnktZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcclxuXHJcbi8vIEZvbnQtc2l6ZSBtb2JpbGVcclxuJGgxLWZvbnQteHM6IDEuOHJlbTtcclxuJGgyLWZvbnQteHM6IDEuMnJlbTtcclxuJGJ1dHRvbi1mb250LXhzOiAwLjdyZW07XHJcblxyXG4vLyBGb250LXNpemUgZGVza3RvcFxyXG4kaDEtZm9udC14bDogMy41cmVtO1xyXG4kaDItZm9udC14bDogMi4ycmVtO1xyXG5cclxuLy8gU2NyZWVuIHNpemVzXHJcbiRwaXhlbDI6IDQxMXB4O1xyXG4kbGFuZHNjYXBlLXBob25lczogNTc2cHg7XHJcbiR0YWJsZXRzOiA3NjhweDtcclxuJGRlc2t0b3BzOiA5OTJweDtcclxuJGxhcmdlLWRlc2t0b3BzOiAxMjAwcHg7XHJcbiR4LWxhcmdlLWRlc2t0b3BzOiAxOTAwcHg7IiwiLm5hdmJhci1saWdodCB7XHJcbiAgICAubmF2YmFyLWJyYW5kIHtcclxuICAgICAgICB3aWR0aDogMjAlO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuICAgIC5uYXZiYXItbGlnaHQge1xyXG5cclxuICAgICAgICAubmF2YmFyLWJyYW5kIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIkBpbXBvcnQgXCJfdmFyaWFibGVzXCI7XHJcblxyXG4udGV4dC1ib3ggeyBcclxuICAgIC50ZXh0LWJveC1sb2dvIHtcclxuICAgICAgICBtYXJnaW46IDAgMCA4JSAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMzAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4udGV4dC1ib3gge1xyXG4gICAgcGFkZGluZzogNSUgMCAxNSUgMyU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1iZy1jb2xvcjsgXHJcbn1cclxuXHJcbi50ZXh0LWJveCB7XHJcbiAgICAuc2NyZWVuc2hvdC1jb250YWluZXIge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHgtbGFyZ2UtZGVza3RvcHMpIHtcclxuICAgIC50ZXh0LWJveCB7XHJcbiAgICAgICAgLnNjcmVlbnNob3QtY29udGFpbmVyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDYwMHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogNzYlO1xyXG4gICAgICAgICAgICB0b3A6IDIyODhweDtcclxuICAgICAgICAgICAgcmlnaHQ6IDE1OHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkBpbXBvcnQgXCJfdmFyaWFibGVzXCI7XHJcblxyXG4uZmxleC1ob3Jpem9udGFsLXdyYXAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4iLCJAaW1wb3J0IFwidmFyaWFibGVzXCI7XHJcblxyXG4uZ3JpZC1jb250YWluZXIge1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgbWluLWhlaWdodDogODAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IGxpZ2h0Z3JheTtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgyMDBweCwgMWZyKSk7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gICAgZ3JpZC1nYXA6IDEwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHBpeGVsMikgIHtcclxuICAgIC5ncmlkLWNvbnRhaW5lciB7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbGFuZHNjYXBlLXBob25lcykgIHtcclxuICAgIC5ncmlkLWNvbnRhaW5lciB7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgzMDBweCwgMWZyKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHRhYmxldHMpICB7XHJcbiAgICAuZ3JpZC1jb250YWluZXIge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGRlc2t0b3BzKSAge1xyXG4gICAgLmdyaWQtY29udGFpbmVyIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDQwMHB4LCAxZnIpKTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbGFyZ2UtZGVza3RvcHMpICB7XHJcbiAgICAuZ3JpZC1jb250YWluZXIge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHgtbGFyZ2UtZGVza3RvcHMpICB7XHJcbiAgICAuZ3JpZC1jb250YWluZXIge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCxtaW5tYXgoNTAwcHgsMWZyKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pdGVtMXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXRyYWRpYy1jb2xvci1vbmU7XHJcbn1cclxuXHJcbi5pdGVtMntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXRyYWRpYy1jb2xvci10d287XHJcbn1cclxuXHJcbi5pdGVtM3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXRyYWRpYy1jb2xvci10aHJlZTtcclxufVxyXG5cclxuLml0ZW00e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRldHJhZGljLWNvbG9yLW9uZTtcclxufVxyXG5cclxuLml0ZW01e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRldHJhZGljLWNvbG9yLXR3bztcclxufVxyXG5cclxuLml0ZW02e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRldHJhZGljLWNvbG9yLXRocmVlO1xyXG59XHJcblxyXG4iLCJAaW1wb3J0IFwidmFyaWFibGVzXCI7XHJcblxyXG4ubWlsZXN0b25lcyB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiA1MTBweCAwIDI3NHB4O1xyXG59XHJcblxyXG4ubWlsZXN0b25lcyB7XHJcbiAgICAuYmFja2dyb3VuZCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBsZWZ0OiBjYWxjKCgoMTAwJSAtIDEyMDBweCkgLyAyKSArICgxMjAwcHggKiAwLjE3NSkpO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgIHotaW5kZXg6IC0xOztcclxuICAgIH1cclxufVxyXG5cclxuLm1pbGVzdG9uZXMge1xyXG4gICAgLmNvbnRlbnQtcm93IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxufVxyXG5cclxuLm1pbGVzdG9uZXMge1xyXG4gICAgLmNvbnRlbnQtY29udGFpbmVyIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDQ0cHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubWlsZXN0b25lcyB7XHJcbiAgICAuaW1hZ2UtY29udGFpbmVyIHtcclxuICAgICAgICB3aWR0aDogNDEuNjYlO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubWlsZXN0b25lcyB7XHJcbiAgICAuaW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogLTM1MnB4O1xyXG4gICAgICAgIGxlZnQ6IC0xMzZweDtcclxuICAgICAgICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5taWxlc3RvbmVzIHtcclxuICAgIC5jb250ZXh0LWNvbnRhaW5lciB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMCUgMCAzNSU7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHBpeGVsMikge1xyXG4gICAgLm1pbGVzdG9uZXMge1xyXG4gICAgICAgIC5pbWFnZSB7XHJcbiAgICAgICAgICAgIHRvcDogLTM1MHB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAtMTIycHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXRzKSB7XHJcbiAgICAubWlsZXN0b25lcyB7XHJcbiAgICAgICAgLmltYWdlIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMjglO1xyXG4gICAgICAgICAgICB0b3A6IC01MzBweDtcclxuICAgICAgICAgICAgbGVmdDogLTI4NnB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbGFyZ2UtZGVza3RvcHMpIHtcclxuICAgIC5taWxlc3RvbmVzIHtcclxuICAgICAgICAuaW1hZ2Uge1xyXG4gICAgICAgICAgICB0b3A6IC0yMzdweDtcclxuICAgICAgICAgICAgbGVmdDogLTQ2NHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAubWlsZXN0b25lcyB7XHJcbiAgICAgICAgLmNvbnRlbnQtY29udGFpbmVyIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAwIDAgNTglO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkeC1sYXJnZS1kZXNrdG9wcykge1xyXG5cclxuICAgIC5taWxlc3RvbmVzIHtcclxuICAgICAgICBwYWRkaW5nOiA1NjBweCAwIDYwMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5taWxlc3RvbmVzIHtcclxuICAgICAgICAuY29udGVudC1yb3cge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAubWlsZXN0b25lcyB7XHJcbiAgICAgICAgLmNvbnRleHQtY29udGFpbmVyIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAwIDAgNyU7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCAyMzJweCAwIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5taWxlc3RvbmVzIHtcclxuICAgICAgICAuaW1hZ2Uge1xyXG4gICAgICAgICAgICBsZWZ0OiAtODMxcHg7XHJcbiAgICAgICAgICAgIHRvcDogLTQ3OHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkBpbXBvcnQgJ192YXJpYWJsZXMnO1xyXG5AaW1wb3J0IFwiX2hlcm8tc2VjdGlvblwiO1xyXG5AaW1wb3J0IFwiX25hdi1iYXJcIjtcclxuQGltcG9ydCBcIl90ZXh0LWJveFwiO1xyXG5AaW1wb3J0IFwiX3Bvc2l0aW9uaW5nLWZsZXhib3hcIjtcclxuQGltcG9ydCBcIl9ib3hfc3RlcFwiO1xyXG5AaW1wb3J0IFwiX21pbGVzdG9uZS1zZWN0aW9uXCI7XHJcblxyXG4vLyBzdHlsZXMuc2Nzc1xyXG5ib2R5LFxyXG5odG1sIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XHJcbiAgZm9udC1mYW1pbHk6ICRwcmltYXJ5LWZvbnQtZmFtaWx5O1xyXG59XHJcblxyXG5wLCBhIHtcclxuICBmb250LWZhbWlseTogJHNlY29uZGFyeS1mb250LWZhbWlseTtcclxufVxyXG5cclxuaW1nIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbnVsIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5hOmhvdmVyLCBcclxuICBhOmZvY3VzIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbmEge1xyXG4gIGltZyB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRsYXJnZS1kZXNrdG9wcykge1xyXG4gIGJvZHkge1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG4gIH1cclxuXHJcbiAgaDEge1xyXG4gICAgZm9udC1zaXplOiA0OHB4O1xyXG4gIH1cclxuXHJcbiAgaDIge1xyXG4gICAgZm9udC1zaXplOiA0OHB4O1xyXG4gIH1cclxufVxyXG5cclxuIl19 */
